@page "/AddToy"
@using Blazor.Data
@using Blazor.Models
@inject KinderGardenServices services
<h3>AddToy</h3>

<EditForm Model="newToy" OnValidSubmit="AddNewToy">
       <DataAnnotationsValidator/>
            <ValidationSummary/>

    <div class="form-group">
        Name:<br/>
        <InputText @bind-Value="newToy.Name"/>
    </div>
       <div class="form-group">
           Color:<br/>
           <InputText @bind-Value="newToy.Color"/>
       </div>
       <div class="form-group">
           Condition:<br/>
           <InputText @bind-Value="newToy.Condition"/>
       </div>
        Is Favourite?:<br/>
       @*<div>
           <InputCheckbox checked=@newToy.IsFavourite ValueExpression="() => IsFavorite()"/> 
       </div>*@
      
       <select class="form-control selectpicker" @bind="childId">
        <option>--Owner--</option>
        @foreach (var child in children)
        {
            <option value="@child.ChildId">@child.Name</option>
        }
    </select>
    <p class="actions">
        <button class="btn btn-outline-dark" type="submit"> Add new toy</button>
    </p>
<p>@message</p>



</EditForm>

@code {
    private Toy newToy = new Toy();
    private List<Child> children = new List<Child>();
    private int childId = 0;
    private string message = "";
    
    protected override async Task OnInitializedAsync()
    {
        children = await services.GetAllChildren();
    }

    private async Task AddNewToy()
    {
        try
        {
            newToy = await services.AddToy(childId, newToy);
            message = "New toy has been added";
        }
        catch (Exception e)
        {
            message = e.Message;
        }
    }

    /*private bool IsFavorite()
    {
        newToy.IsFavourite = true;
        return true;
    }*/

}